#!/bin/bash
clear; mkdir webui; cd webui;
export PATH=~/miniconda3/envs/webui/bin:$PATH;
sudo add-apt-repository universe -y > /dev/null;
echo -e "\033[1;35mAdding Universe APT repository to Ubuntu (step 1 of 30) ...\033[0m";
echo -e "\033[1;35mUpdating Ubuntu (step 2 of 30) ...\033[0m";
sudo apt-get update > /dev/null 2>&1;
sudo apt-get upgrade -y > /dev/null 2>&1;
echo -e "\033[1;35mInstalling build-essential/pkg-config/libglvnd-dev/git (step 3 of 30) ...\033[0m";
sudo apt install build-essential -y > /dev/null 2>&1;
sudo apt install pkg-config > /dev/null 2>&1;
sudo apt install libglvnd-dev -y > /dev/null 2>&1;
echo -e "\033[1;35mRegistering script files as executables (step 4 of 30) ...\033[0m";
echo -e "\033[1;35mInstalling Aria2 (step 5 of 30) ...\033[0m";
sudo apt-get install aria2 -y > /dev/null;
echo -e "\033[1;35mDownloading Miniconda (step 6 of 30) ...\033[0m";
wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh > /dev/null 2>&1;
echo -e "\033[1;32mInstalling Miniconda (step 7 of 30) ...\033[0m";
bash Miniconda3-latest-Linux-x86_64.sh -b > /dev/null 2>&1;
source ~/miniconda3/etc/profile.d/conda.sh;
echo -e "\033[1;32mInitializing Miniconda (step 8 of 30) ...\033[0m";
. ~/.bashrc; ~/miniconda3/bin/conda init > /dev/null 2>&1;
echo -e "\033[1;32mUpdating Miniconda (step 9 of 30) ...\033[0m";
conda update -n base -c defaults conda --yes > /dev/null 2>&1;
conda config --set channel_priority false;
echo -e "\033[1;32mCreating Miniconda env named webui with Python v3.10.9 (step 10 of 30) ...\033[0m";
conda create -n webui python=3.10.9 --yes > /dev/null 2>&1;
echo -e "\033[1;32mActivating Miniconda env 'webui' (step 11 of 30) ...\033[0m";
conda activate webui > /dev/null 2>&1;
echo -e "\033[1;31mInstalling CUDA, this will take a while (step 12 of 30) ...\033[0m";
conda install -c conda-forge cudatoolkit-dev --yes > /dev/null 2>&1;
echo -e "\033[1;32mFinished CUDA installation ...\033[0m";
echo -e "\033[1;35mCloning Text Generation WebUI from Oobabooga (step 13 of 30) ...\033[0m";
git clone https://github.com/oobabooga/text-generation-webui.git > /dev/null 2>&1;
cd text-generation-webui;
echo -e "\033[1;35mFixing Text Generation WebUI to an older version (step 14 of 30) ...\033[0m";
git reset --hard fcda3f87767e642d1c0411776e549e1d3894843d > /dev/null 2>&1;
cd ..;
echo -e "\033[32mCloning Bits and Bytes from TimDettmers (step 15 of 30) ...\033[0m";
git clone https://github.com/TimDettmers/bitsandbytes.git > /dev/null 2>&1;
echo -e "\033[32mInstalling Ninja and CChardet (step 16 of 30) ...\033[0m";
conda install ninja --yes > /dev/null 2>&1;
pip install cchardet chardet > /dev/null 2>&1;
echo -e "\033[1;33mChecking CUDA Installation (step 17 of 30) ...\033[0m";
echo -e "\033[1;96m$(nvcc --version)\033[0m";
echo -e "\033[1;32mFixing Bitsandbytes to an older version (step 18 of 30) ...\033[0m";
cd bitsandbytes;
git reset --hard 49a04253fb1f3e195cb0e9e79bdb01db7a490774 > /dev/null 2>&1;
echo -e "\033[32mInstalling pip requirements for Bitsandbytes (step 19 of 30) ...\033[0m";
pip install -r requirements.txt > /dev/null 2>&1;
echo -e "\033[1;31mMaking CUDA to 117 (step 20 of 30) ...\033[0m";
CUDA_VERSION=117 make cuda11x > /dev/null 2>&1;
echo -e "\033[0;32mInstalling setup.py from Bitsandbytes (step 21 of 30) ...\033[0m";
python setup.py install > /dev/null 2>&1; cd ..;
echo -e "\033[32mCreating repositories folder (step 22 of 30) ...\033[0m";
cd text-generation-webui;
mkdir repositories; cd repositories;
echo -e "\033[32mCloning Oobabooga's CUDA branch for GPTQ-for-LLaMa from qwopqwop200 (step 23 of 30) ...\033[0m"; git clone --branch cuda https://github.com/oobabooga/GPTQ-for-LLaMa.git > /dev/null 2>&1;
cd GPTQ-for-LLaMa;
echo -e "\033[1;32mFixing GPTQ-for-LLaMa to an older version (step 24 of 30) ...\033[0m";
git reset --hard a6f363e3f93b9fb5c26064b5ac7ed58d22e3f773 > /dev/null 2>&1;
echo -e "\033[1;32mPatching requirements.txt file of qwopqwop200 GPTQ-for-LLaMa (step 25 of 30) ...\033[0m";
rm requirements.txt;
cp ~/fast_txtgen/req_1 requirements.txt;
echo -e "\033[1;32mInstalling pip requirements for GPTQ-for-LLaMa, this will take a while (step 26 of 30) ...\033[0m";
pip install -r requirements.txt > /dev/null 2>&1;
echo -e "\033[0;32mInstalling setup_cuda.py from GPTQ-for-LLaMa (step 27 of 30) ...\033[0m";
python setup_cuda.py install > /dev/null 2>&1;
cd ../..;
echo -e "\033[1;32mPatching requirements.txt file of oobabooga text-generation-webui (step 28 of 30) ...\033[0m";
rm requirements.txt;
cp ~/fast_txtgen/req_2 requirements.txt;
cp ~/fast_txtgen/settings.json settings.json;
echo -e "\033[32mInstalling pip requirements for Text Generation WebUI (step 29 of 30) ...\033[0m";
pip install -r requirements.txt > /dev/null 2>&1;
echo -e "\033[32mConverting magnet link to a .torrent file (step 30 of 30) ...\033[0m";
aria2c --bt-metadata-only=true --bt-save-metadata=true "magnet:?xt=urn:btih:88f7d9d2460ffcaf78b21e83012de00939eacb65&dn=LLaMA-HF-4bit-128g&tr=http%3a%2f%2fbt2.archive.org%3a6969%2fannounce&tr=http%3a%2f%2fbt1.archive.org%3a6969%2fannounce" > /dev/null 2>&1;
mv 88f7d9d2460ffcaf78b21e83012de00939eacb65.torrent LLaMA-HF-4bit-128g.torrent;
echo -e "\033[1;34mInstalled successfully! If this is the first time, download a model typing "./download" ... If downloaded already, you can run webUI with "./run"\033[0m";
conda deactivate; conda deactivate;
